@model EmailMarketing.Web.Areas.Member.Models.Contacts.SingleContactModel
@{
    ViewData["Title"] = "AddSingleContact";
}

<!-- Content area -->
<div class="content">

    <div class="card">
        <div class="card-header">
            <div class="pl-5 pr-3">
                <h4 class="card-title">Add Single Contact</h4>
            </div>
        </div>
        <hr />
        <!-- navigation -->
        <!-- /navigation -->
        <partial name="_ActionMessage" model="@Model.Response" />
        <div class="card-body">
            <form id="addContactForm" asp-area="Member" asp-controller="Contacts" asp-action="AddSingleContact" method="post">
                <div class="row">


                    <div class="col-md-6">
                        <div class="pl-5 pr-3">
                            <h4>Add Contact Details</h4>
                            @Html.AntiForgeryToken()
                            <div class="form-group row">
                                <label asp-for="Email" class="col-sm-3 col-form-label">Email Address *</label>
                                <div class="col-sm-9">
                                    <input type="email" class="form-control" asp-for="Email">
                                </div>
                            </div>

                            <!-- Standard Fields -->
                            <div class="row-fluid summary pb-4">
                                <span>Standard Fields</span>
                                <a class="btn border border-primary float-right" data-toggle="collapse" data-target="#intro" id="showHide">Show</a>
                            </div>
                            <div class="row-fluid summary">
                                <div id="intro" class="collapse">

                                    @{
                                        for (int i = 0; i < Model.ContactValueMaps.Count(); i++)
                                        {

                                            if (Model.ContactValueMaps[i].Text.Contains("Email") == false)
                                            {
                                                <div class="form-group row">

                                                    <label asp-for="@Model.ContactValueMaps[i].Input" class="col-sm-3 col-form-label">@Model.ContactValueMaps[i].Text</label>
                                                    <div class="col-sm-9">
                                                        <input type="text" class="form-control" value="@Model.ContactValueMaps[i].Input" name="ContactValueMaps[@i].Input">
                                                        <input type="hidden" class="form-control" value="@Model.ContactValueMaps[i].Value" name="ContactValueMaps[@i].Value">
                                                    </div>
                                                </div>
                                                }
                                            }
                                        }
                                </div>
                            </div>

                            <!-- Custom Fields -->

                            <div class="row-fluid summary pb-4">
                                <span>Custom Fields</span>
                                <a class="btn border border-primary float-right" data-toggle="collapse" data-target="#intro2" id="showHideCustom">Show</a>
                            </div>
                            <div class="row-fluid summary">
                                <div id="intro2" class="collapse">
                                    @{
                                        for (int i = 0; i < Model.ContactValueMapsCustom.Count(); i++)
                                        {
                                            if (Model.ContactValueMapsCustom[i].Text.Contains("Email") == false)
                                            {
                                                <div class="form-group row">

                                                    <label asp-for="@Model.ContactValueMapsCustom[i].Input" class="col-sm-3 col-form-label">@Model.ContactValueMapsCustom[i].Text</label>
                                                    <div class="col-sm-9">
                                                        <input type="text" class="form-control" value="@Model.ContactValueMapsCustom[i].Input" name="ContactValueMapsCustom[@i].Input">
                                                        <input type="hidden" class="form-control" value="@Model.ContactValueMapsCustom[i].Value" name="ContactValueMapsCustom[@i].Value">
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <h3>Where you want to add this contract?</h3>
                        @Html.AntiForgeryToken()
                        <!-- selected -->
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="checkAll">
                            <label class="form-check-label" for="checkAll">Select All Lists</label>
                        </div>

                        <div class="bg-white">
                            <p class="p-2">
                                <i class="icon-collaboration"></i>&nbsp;&nbsp; <span id="selected">No</span> <span>List</span> Selected
                            </p>
                        </div>

                        <div class="bg-white">
                            <ul class="list-group">
                                @{
                                    for (int i = 0; i < Model.GroupSelectList.Count(); i++)
                                    {
                                        <li class="list-group-item border-bottom">
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input group-select" id="checkSingle[@i]" value="@Model.GroupSelectList[i].IsChecked.ToString().ToLower()" name="GroupSelectList[@i].IsChecked">
                                                <input type="hidden" class="form-control" asp-for="@Model.GroupSelectList[i].Value">
                                                <input type="hidden" class="form-control" asp-for="@Model.GroupSelectList[i].Text">

                                                <label class="form-check-label" for="checkSingle[@i]">
                                                    @Model.GroupSelectList[i].Text
                                                    <span class="border p-1">
                                                        <span>@Model.GroupSelectList[i].Count</span>&nbsp;&nbsp;
                                                        <i class="fas fa-user"></i>
                                                    </span>
                                                </label> &nbsp;&nbsp;
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                        <!-- /selected -->

                    </div>





                </div>

            </form>
            <div class="d-flex justify-content-end">
                <button id="btnsubmit" class="btn btn-primary"><i class="icon-file-check2"></i> Save</button>
            </div>
        </div>
           

        </div>
    </div>


<!-- /content area -->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>

<script>
    //$(function () { });
    $('#checkAll').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
                $(this).val(this.checked);
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
                $(this).val(this.checked);
            });
        }
    });

    //$(function () {
    //$('#checkAll').click(function () {
    //    if ($("#checkAll").is(':checked')) {
    //        $('.group-select').change(function () {
    //            var val = true;
    //            $(this).val(val);
    //        });
    //    } else {
    //        $('.group-select').change(function () {
    //            var val = false;
    //            $(this).val(val);
    //        });
    //    }
    //});
    //});

    $('.group-select').change(function () {
        var val = this.checked;
        $(this).val(val);
    });


    //Count selected List
    var selectedElm = document.getElementById('selected');
    function showChecked() {
        var count = document.querySelectorAll('input.group-select:checked').length;
        if (count > 0) selectedElm.innerHTML = count;
        else selectedElm.innerHTML = "No";
    }
    document.querySelectorAll("input").forEach(i => {
        i.onclick = () => showChecked();
    });

    //$(document).ready(function () {
    //    $("#submit").click(function (e) {
    //        //Serialize the form datas.   
    //        var valdata = $("#form1").serialize();
    //        //to get alert popup   
    //        alert(valdata);
    //        $.ajax({
    //            url: "/Contacts/AddSingleContact",
    //            type: "POST",
    //            dataType: 'json',
    //            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
    //            data: valdata
    //        });
    //        $("#form2").submit();
    //    });
    //});  

    document.getElementById("btnsubmit").onclick = function () {
        document.getElementById("addContactForm").submit();
    //    document.getElementById("form2").submit();
    }

    

</script>